#include<stdio.h>
#include<stdlib.h>
struct node
{
 int data;
 struct node* link;
};
 struct node *root=NULL;

void addatend();
void display();
void addatbegin();
void delete();

void main()
{
  int ch,len;
  while(1)
  {
    printf("\n 1. addatend");
    printf("\n 2. display");
    printf("\n 3. addatbegin");
    printf("\n 4. To find the length");
    printf("\n 5. delete");
    printf("\n 6. quit");
    printf("\n Enter your choice:");
    scanf("%d",&ch);
    switch(ch)
    {
      case 1: addatend();
	      break;
      case 2: display();
	      break;
      case 3: addatbegin();
	      break;
      case 4: len=length();
	      printf("\n The length of the linked list is %d",len);
	      break;
      case 5: delete();
	      break;
      case 6: exit(0);
      default: printf("\n Invalid");

    }
  }
}
void addatend()
{
  struct node* temp;
  temp=(struct node*)malloc(sizeof(struct node));
  printf("\n Enter the node data:");
  scanf("%d",&temp->data);
  temp->link=NULL;
  if(root==NULL)
  {
    root=temp;
  }
  else
  {
   struct node* p;
   p=root;
   while(p->link!=NULL)
   {
     p=p->link;
   }
   p->link=temp;
  }
}
void display()
  {
    struct node* temp;
    temp=root;
    if(temp==NULL)
    {
       printf("List is empty");
    }
    else
    {
     while(temp!=NULL)
     {
       printf("%d-->",temp->data);
       temp=temp->link;
     }
     printf("\n\n");
    }
}

void addatbegin()
{
    struct node* temp;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("\n Enter the node data");
    scanf("%d",&temp->data);
    temp->link=NULL;
    if(root==NULL)
    {
    root=temp;
    }
    else
    {
    temp->link=root;
    root=temp;
    }
}
int length()
{
  int count=0;
  struct node* temp;
  temp=root;
  while(temp!=NULL)
  {
    count++;
    temp=temp->link;
  }
  return count;
}
void delete()
{
 struct node *temp;
 int loc;
 printf("\n Enter loc to delete");
 scanf("%d",&loc);
 if(loc>length())
 {
   printf("\n Invalid location");
 }
 else if(loc==1)
 {
 temp=root;
 root=temp->link;
 temp->link=NULL;
 free(temp);
 }
 else
 {
   struct node* p=root,*q;
   int i=1;
   while(i<loc-1)
   {
     p=p->link;
     i++;
   }
   q=p->link;
   p->link=q->link;
   q->link=NULL;
   free(q);
 } 
}
